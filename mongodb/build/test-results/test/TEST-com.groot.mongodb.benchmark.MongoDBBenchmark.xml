<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.groot.mongodb.benchmark.MongoDBBenchmark" tests="1" skipped="0" failures="0" errors="0" timestamp="2020-12-01T14:14:15" hostname="DESKTOP-3IU3Q7U" time="258.142">
  <properties/>
  <testcase name="executeJmhRunner" classname="com.groot.mongodb.benchmark.MongoDBBenchmark" time="258.142"/>
  <system-out><![CDATA[15:14:11.478 [Test worker] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class com.groot.mongodb.benchmark.MongoDBBenchmark]
15:14:11.491 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:14:11.503 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:14:11.556 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.groot.mongodb.benchmark.MongoDBBenchmark] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:14:11.579 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.groot.mongodb.benchmark.MongoDBBenchmark], using SpringBootContextLoader
15:14:11.589 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.groot.mongodb.benchmark.MongoDBBenchmark]: class path resource [com/groot/mongodb/benchmark/MongoDBBenchmark-context.xml] does not exist
15:14:11.590 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.groot.mongodb.benchmark.MongoDBBenchmark]: class path resource [com/groot/mongodb/benchmark/MongoDBBenchmarkContext.groovy] does not exist
15:14:11.591 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.groot.mongodb.benchmark.MongoDBBenchmark]: no resource found for suffixes {-context.xml, Context.groovy}.
15:14:11.593 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.groot.mongodb.benchmark.MongoDBBenchmark]: MongoDBBenchmark does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:14:11.704 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.groot.mongodb.benchmark.MongoDBBenchmark]
15:14:11.864 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [E:\dev\Uni\Research Methods\BenchmarkProject\mongodb\build\classes\java\main\com\groot\mongodb\MongodbApplication.class]
15:14:11.866 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.groot.mongodb.MongodbApplication for test class com.groot.mongodb.benchmark.MongoDBBenchmark
15:14:12.067 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.groot.mongodb.benchmark.MongoDBBenchmark]: using defaults.
15:14:12.068 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:14:12.080 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:14:12.093 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6acb52c0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7ed34968, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@34e708a1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@377561c5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@71878b9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6364f93b, org.springframework.test.context.event.EventPublishingTestExecutionListener@6fca57f6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@73ad6883, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@37340bff, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@73dd8103, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4e951d69, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@56648d48, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@41981f88]
15:14:12.097 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.groot.mongodb.benchmark.MongoDBBenchmark]
15:14:12.098 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.groot.mongodb.benchmark.MongoDBBenchmark]
15:14:12.103 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.groot.mongodb.benchmark.MongoDBBenchmark]
15:14:12.104 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.groot.mongodb.benchmark.MongoDBBenchmark]
15:14:12.109 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.groot.mongodb.benchmark.MongoDBBenchmark]
15:14:12.109 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.groot.mongodb.benchmark.MongoDBBenchmark]
15:14:12.111 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.groot.mongodb.benchmark.MongoDBBenchmark]
15:14:12.112 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.groot.mongodb.benchmark.MongoDBBenchmark]
15:14:12.112 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.groot.mongodb.benchmark.MongoDBBenchmark]
15:14:12.113 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.groot.mongodb.benchmark.MongoDBBenchmark]
15:14:12.121 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@47ec5906 testClass = MongoDBBenchmark, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@19959295 testClass = MongoDBBenchmark, locations = '{}', classes = '{class com.groot.mongodb.MongodbApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@24aca9c3, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@35fb6c33, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7c6e0e22, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2259b1b5, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2955e2e9], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
15:14:12.124 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.groot.mongodb.benchmark.MongoDBBenchmark]
15:14:12.124 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.groot.mongodb.benchmark.MongoDBBenchmark]
15:14:12.130 [Test worker] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@47ec5906 testClass = MongoDBBenchmark, testInstance = com.groot.mongodb.benchmark.MongoDBBenchmark@14133a66, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@19959295 testClass = MongoDBBenchmark, locations = '{}', classes = '{class com.groot.mongodb.MongodbApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@24aca9c3, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@35fb6c33, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7c6e0e22, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2259b1b5, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2955e2e9], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]].
15:14:12.165 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.3.5.RELEASE)

2020-12-01 15:14:12.654  INFO 23228 --- [    Test worker] c.g.mongodb.benchmark.MongoDBBenchmark   : Starting MongoDBBenchmark on DESKTOP-3IU3Q7U with PID 23228 (started by jaciw in E:\dev\Uni\Research Methods\BenchmarkProject\mongodb)
2020-12-01 15:14:12.656  INFO 23228 --- [    Test worker] c.g.mongodb.benchmark.MongoDBBenchmark   : No active profile set, falling back to default profiles: default
2020-12-01 15:14:13.758  INFO 23228 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-12-01 15:14:13.864  INFO 23228 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 97ms. Found 1 MongoDB repository interfaces.
2020-12-01 15:14:14.502  INFO 23228 --- [    Test worker] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-12-01 15:14:14.670  INFO 23228 --- [localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:7}] to localhost:27017
2020-12-01 15:14:14.690  INFO 23228 --- [localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16888700}
2020-12-01 15:14:15.608  INFO 23228 --- [    Test worker] c.g.mongodb.benchmark.MongoDBBenchmark   : Started MongoDBBenchmark in 3.436 seconds (JVM running for 6.337)
# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1
# VM invoker: C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot\bin\java.exe
# VM options: -server -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=heapdump.hprof -XX:StartFlightRecording=disk=true,dumponexit=true,filename=recording-test.jfr,maxsize=1024m,maxage=1d,settings=profile,path-to-gc-roots=true
# Warmup: 3 iterations, 10 s each
# Measurement: 9 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.groot.mongodb.benchmark.MongoDBBenchmark.benchmarkFetchAll

# Run progress: 0,00% complete, ETA 00:04:00
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 2020-12-01 15:14:17.235  INFO 23228 --- [ll-jmh-worker-1] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:8}] to localhost:27017
6,805 ms/op
# Warmup Iteration   2: 5,467 ms/op
# Warmup Iteration   3: 4,857 ms/op
Iteration   1: 4,065 ms/op
Iteration   2: 3,551 ms/op
Iteration   3: 3,404 ms/op
Iteration   4: 3,506 ms/op
Iteration   5: 4,549 ms/op
Iteration   6: 4,596 ms/op
Iteration   7: 4,697 ms/op
Iteration   8: 4,457 ms/op
Iteration   9: 4,901 ms/op

Result "com.groot.mongodb.benchmark.MongoDBBenchmark.benchmarkFetchAll":
  4,192 ±(99.9%) 0,965 ms/op [Average]
  (min, avg, max) = (3,404, 4,192, 4,901), stdev = 0,574
  CI (99.9%): [3,227, 5,157] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1
# VM invoker: C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot\bin\java.exe
# VM options: -server -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=heapdump.hprof -XX:StartFlightRecording=disk=true,dumponexit=true,filename=recording-test.jfr,maxsize=1024m,maxage=1d,settings=profile,path-to-gc-roots=true
# Warmup: 3 iterations, 10 s each
# Measurement: 9 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.groot.mongodb.benchmark.MongoDBBenchmark.benchmarkFetchOne

# Run progress: 50,00% complete, ETA 00:02:08
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 5,739 ms/op
# Warmup Iteration   2: 5,296 ms/op
# Warmup Iteration   3: 5,315 ms/op
Iteration   1: 5,037 ms/op
Iteration   2: 5,213 ms/op
Iteration   3: 4,006 ms/op
Iteration   4: 4,334 ms/op
Iteration   5: 6,021 ms/op
Iteration   6: 5,246 ms/op
Iteration   7: 3,972 ms/op
Iteration   8: 3,394 ms/op
Iteration   9: 3,591 ms/op

Result "com.groot.mongodb.benchmark.MongoDBBenchmark.benchmarkFetchOne":
  4,535 ±(99.9%) 1,486 ms/op [Average]
  (min, avg, max) = (3,394, 4,535, 6,021), stdev = 0,884
  CI (99.9%): [3,049, 6,021] (assumes normal distribution)


# Run complete. Total time: 00:04:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt  Score   Error  Units
MongoDBBenchmark.benchmarkFetchAll  avgt    9  4,192 ± 0,965  ms/op
MongoDBBenchmark.benchmarkFetchOne  avgt    9  4,535 ± 1,486  ms/op

Benchmark result is saved to ./report.txt
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
